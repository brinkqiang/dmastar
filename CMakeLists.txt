cmake_minimum_required(VERSION 3.2)

PROJECT(dmastar)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)
INCLUDE(cmake/ModuleImport.cmake)
INCLUDE(cmake/ModuleCompileOptions.cmake)
ModuleSetCompileOptions()

SET(DMASTAR_VERSION_MAJOR "1")
SET(DMASTAR_VERSION_MINOR "0")
SET(DMASTAR_VERSION_PATCH "1")
SET(DMASTAR_VERSION "${DMASTAR_VERSION_MAJOR}.${DMASTAR_VERSION_MINOR}.${DMASTAR_VERSION_PATCH}")

MESSAGE(STATUS "VERSION: ${DMASTAR_VERSION}")

ADD_DEFINITIONS(-DUSE_DMASTAR)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/test)

LINK_DIRECTORIES(${CMAKE_SOURCE_DIR}/bin)

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)

FILE(GLOB_RECURSE DMASTAR_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/include/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/include/*.h

${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.cc
${CMAKE_CURRENT_SOURCE_DIR}/src/*.c
${CMAKE_CURRENT_SOURCE_DIR}/src/*.hpp
${CMAKE_CURRENT_SOURCE_DIR}/src/*.h
)

IF (WIN32)
    LIST(APPEND DMASTAR_SOURCES)
ENDIF(WIN32)

FILE(GLOB_RECURSE DMASTAR_DUNGEON_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/test/dungeon.cpp)

FILE(GLOB_RECURSE DMASTAR_SPEED_SOURCES
${CMAKE_CURRENT_SOURCE_DIR}/test/speed.cpp)

ADD_LIBRARY(dmastar ${DMASTAR_SOURCES})
ADD_EXECUTABLE(dungeon ${DMASTAR_DUNGEON_SOURCES})
TARGET_LINK_LIBRARIES(dungeon dmastar)
ADD_EXECUTABLE(speed ${DMASTAR_SPEED_SOURCES})
TARGET_LINK_LIBRARIES(speed dmastar)

#ADD_CUSTOM_COMMAND(
#TARGET dmastartest
#PRE_BUILD
#COMMAND ${CMAKE_COMMAND} -E copy_if_different
#${CMAKE_CURRENT_SOURCE_DIR}/config/test.csv
#$<TARGET_FILE_DIR:dmastartest>
#)

#INSTALL(DIRECTORY include/ DESTINATION include)
#INSTALL(TARGETS dmastar
#        RUNTIME DESTINATION bin
#        LIBRARY DESTINATION lib
#        ARCHIVE DESTINATION lib)

#SET(DMASTAR_LIBS "dmastar")
#MARK_AS_ADVANCED(${DMASTAR_LIBS})